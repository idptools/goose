'''
Basic parameters for GOOSE that set the boundaries of possible sequences to make.
Can change parameters here and it will change paramters in GOOSE globally
'''
# need this for the min and max Rg / Re functions
import statistics as stat

METAPREDICT_VERSIONS=[1,2,3]
METAPREDICT_DEFAULT_VERSION = 3

ALLOWED_CONSECUTIVE_ORDERED = 3
ALLOWED_TOTAL_ORDERED_FRACTION = 0.05

MINIMUM_LENGTH = 10
MAXIMUM_LENGTH = 10000
MINIMUM_FCR = 0
MAXIMUM_FCR = 1
MINIMUM_NCPR = -1
MAXIMUM_NCPR = 1
MINIMUM_HYDRO = 0.0
MAXIMUM_HYDRO = 6.6
MINIMUM_HYDRO_CHARGED = 0
MAXIMUM_HYDRO_CHARGED = 6.6
MAXIMUM_SIGMA = 1
MINIMUM_SIGMA = 0
MINIMUM_KAPPA = 0.00
MAXIMUM_KAPPA = 1

# allowed error
MAXIMUM_HYDRO_ERROR = 0.07
MAXIMUM_KAPPA_ERROR=0.03
MAXIMUM_RG_RE_ERROR=0.5

# Empirically determined Rg / Re min and max based on length.
def get_min_re(length):
  return stat.sqrt(length+(length/2.8))+5
def get_max_re(length):
  return stat.sqrt(length+(length*140))-10
def get_max_rg(length):
  return stat.sqrt(length+(length*24))-4
def get_min_rg(length):
  return stat.sqrt(length+(length/200))+2

# thresholds
DISORDER_THRESHOLD = 0.5
MAXIMUM_DISORDER = 1.0
MINIMUM_DISORDER = 0

# attempts
DEFAULT_ATTEMPTS = 200
RG_RE_ATTEMPT_NUMBER=200

# maximums for fractions of amino acids
'''
Info on maximum fraction determination: Maximum fractions were
determined by attempting to generate a sequence of 100 amino acids 
in length at each fraction for every amino acid between the decimal
fraction values of 0.01 to 1.00. For each fraction value, the sequence
was populated with the necessary number of the amino acid of interest
and then the rest of the sequence was generated by populating the sequence
with randomly selected amino acids from a list htat did not include
the amino acid that was having its max fraction determined. 500,000
sequences were attempted at each fractional value and then checked to be
disordered using metapredict V2 with a cutoff of 0.5. Thus, it is unlikely that
sequneces with higher fractional values than those listed could be genrated;
although, increased fraction values are not impossible.
'''
MAX_FRACTION_A = 0.95
MAX_FRACTION_R = 1.0
MAX_FRACTION_N = 1.0
MAX_FRACTION_D = 1.0
MAX_FRACTION_C = 1.0
MAX_FRACTION_Q = 1.0
MAX_FRACTION_E = 1.0
MAX_FRACTION_G = 1.0
MAX_FRACTION_H = 1.0
MAX_FRACTION_I = 0.53
MAX_FRACTION_L = 0.42
MAX_FRACTION_K = 1.0
MAX_FRACTION_M = 0.62
MAX_FRACTION_F = 1.0
MAX_FRACTION_P = 1.0
MAX_FRACTION_S = 1.0
MAX_FRACTION_T = 1.0
MAX_FRACTION_W = 0.55
MAX_FRACTION_Y = 0.99
MAX_FRACTION_V = 0.71


# dict of max fractions
MAX_FRACTION_DICT = {'A' : MAX_FRACTION_A, 'R' : MAX_FRACTION_R, 'N' : MAX_FRACTION_N, 'D' : MAX_FRACTION_D, 'C' : MAX_FRACTION_C, 'Q' : MAX_FRACTION_Q, 'E' : MAX_FRACTION_E, 'G' : MAX_FRACTION_G, 'H' : MAX_FRACTION_H, 'I' : MAX_FRACTION_I, 'L' : MAX_FRACTION_L, 'K' : MAX_FRACTION_K, 'M' : MAX_FRACTION_M, 'F' : MAX_FRACTION_F, 'P' : MAX_FRACTION_P, 'S' : MAX_FRACTION_S, 'T' : MAX_FRACTION_T, 'W' : MAX_FRACTION_W, 'Y' : MAX_FRACTION_Y, 'V' : MAX_FRACTION_V}

MAX_CLASS_FRACTIONS = {
  'aromatic': max(MAX_FRACTION_F, MAX_FRACTION_W, MAX_FRACTION_Y),
  'aliphatic': max(MAX_FRACTION_A, MAX_FRACTION_I, MAX_FRACTION_L, MAX_FRACTION_M, MAX_FRACTION_V),
  'polar': max(MAX_FRACTION_N, MAX_FRACTION_Q, MAX_FRACTION_S, MAX_FRACTION_T),
  'positive': max(MAX_FRACTION_R, MAX_FRACTION_K),
  'negative': max(MAX_FRACTION_D, MAX_FRACTION_E),
  'proline': MAX_FRACTION_P,
  'glycine': MAX_FRACTION_G,
  'cysteine': MAX_FRACTION_C,
  'histidine': MAX_FRACTION_H
}

VALID_AMINO_ACIDS = ['A', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'Y']